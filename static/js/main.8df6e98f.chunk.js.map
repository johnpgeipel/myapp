{"version":3,"sources":["components/ImageCard/ImageCard.js","components/Header/Header.js","components/Wrapper/Wrapper.js","components/ScoreBar/ScoreBar.js","App.js","index.js"],"names":["ImageCard","props","className","onClick","imageClick","src","image","alt","id","width","Header","title","desc","rules","Wrapper","children","ScoreBar","score","App","state","images","clickedImages","shuffleCards","array","sort","a","b","Math","random","event","console","log","target","currentImage","indexOf","alert","setState","concat","this","map","key","imageURL","Component","ReactDOM","render","document","getElementById"],"mappings":"uuDAWeA,G,MARG,SAAAC,GAAK,OACnB,yBAAKC,UAAU,OAAOC,QAASF,EAAMG,YACjC,yBAAKF,UAAU,iBACX,yBAAKG,IAAKJ,EAAMK,MAAOC,IAAKN,EAAMO,GAAIN,UAAU,iBAAiBO,MAAM,aCIpEC,G,MAPA,SAAAT,GAAK,OAChB,4BAAQC,UAAU,6BACd,wBAAIA,UAAU,yBAAyBD,EAAMU,OAC7C,uBAAGT,UAAU,oBAAoBD,EAAMW,KAAK,6BAAMX,EAAMY,UCMjDC,G,MATC,SAAAb,GAAK,OACjB,yBAAKC,UAAU,aACX,yBAAKA,UAAU,WACVD,EAAMc,aCGJC,G,MANE,SAAAf,GAAK,OAClB,yBAAKC,UAAU,yBACX,sCAAYD,EAAMgB,U,OC8EXC,G,iNA1EXC,MAAQ,CACJC,SACAC,cAAe,GACfJ,MAAO,G,EAIXK,aAAe,SAAAC,GAEX,OADAA,EAAMC,KAAK,SAACC,EAAGC,GAAJ,MAAU,GAAMC,KAAKC,WACzBL,G,EAIXnB,WAAa,SAAAyB,GACTC,QAAQC,IAAIF,EAAMG,QAClB,IAAMC,EAAeJ,EAAMG,OAAOzB,IACX,EAAKY,MAAME,cAAca,QAAQD,IAAiB,GAIrEE,MAAM,aACN,EAAKC,SAAS,CACVhB,OAAQ,EAAKE,aAAaF,GAC1BC,cAAe,GACfJ,MAAO,KAIX,EAAKmB,SACD,CACIhB,OAAQ,EAAKE,aAAaF,GAC1BC,cAAe,EAAKF,MAAME,cAAcgB,OAAOJ,GAC/ChB,MAAO,EAAKE,MAAMF,MAAQ,GAG9B,WAC6B,KAArB,EAAKE,MAAMF,QACXkB,MAAM,YACN,EAAKC,SAAS,CACVhB,OAAQ,EAAKE,aAAaF,GAC1BC,cAAe,GACfJ,MAAO,Q,wEAQrB,IAAD,OACL,OACI,6BACI,kBAAC,EAAD,CACIN,MAAM,cACNC,KAAK,6BACLC,MAAM,kFAEV,kBAAC,EAAD,CAAUI,MAAOqB,KAAKnB,MAAMF,QAC5B,kBAAC,EAAD,KAEKqB,KAAKnB,MAAMC,OAAOmB,IAAI,SAAAjC,GAAK,OACxB,kBAAC,EAAD,CACIF,WAAY,EAAKA,WACjBI,GAAIF,EAAME,GACVgC,IAAKlC,EAAME,GACXF,MAAOA,EAAMmC,mB,GAlEvBC,cCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8df6e98f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ImageCard.css\";\n\nconst ImageCard = props => (\n    <div className=\"card\" onClick={props.imageClick}>\n        <div className=\"img-container\">\n            <img src={props.image} alt={props.id} className=\"img-responsive\" width=\"100%\" />\n        </div>\n    </div>\n);\n\nexport default ImageCard;","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n    <header className=\"jumbotron jumbotron-fluid\">\n        <h1 className=\"display-3 text-center\">{props.title}</h1>\n        <p className=\"lead text-center\">{props.desc}<br/>{props.rules}</p>\n    </header>\n);\n\nexport default Header;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => (\n    <div className=\"container\">\n        <div className=\"wrapper\">\n            {props.children}\n        </div>\n    </div>\n);\n\n\nexport default Wrapper;","import React from \"react\";\nimport \"./ScoreBar.css\";\n\nconst ScoreBar = props => (\n    <div className=\"score-bar text-center\">\n        <h3>Score: {props.score}</h3>\n    </div>\n);\n\nexport default ScoreBar;","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\nimport ScoreBar from \"./components/ScoreBar\";\nimport images from \"./images.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n    state = {\n        images,\n        clickedImages: [],\n        score: 0\n    };\n\n    // method for randomly sorting the images array\n    shuffleCards = array => {\n        array.sort((a, b) => 0.5 - Math.random());\n        return array;\n    };\n\n   \n    imageClick = event => {\n        console.log(event.target);\n        const currentImage = event.target.alt;\n        const alreadyClicked = this.state.clickedImages.indexOf(currentImage) > -1;\n\n        \n        if (alreadyClicked) {\n            alert(\"You lost!\");\n            this.setState({\n                images: this.shuffleCards(images),\n                clickedImages: [],\n                score: 0\n            });\n        } else {\n            \n            this.setState(\n                {\n                    images: this.shuffleCards(images),\n                    clickedImages: this.state.clickedImages.concat(currentImage),\n                    score: this.state.score + 1\n                },\n                \n                () => {\n                    if (this.state.score === 12) {\n                        alert(\"You win!\");\n                        this.setState({\n                            images: this.shuffleCards(images),\n                            clickedImages: [],\n                            score: 0\n                        });\n                    }\n                }\n            );\n        }\n    };\n\n    render() {\n        return (\n            <div> \n                <Header \n                    title=\"Clicky Game\" \n                    desc=\"A React based memory game.\"\n                    rules=\"Click on an image to earn points, but don't click on an image more than once.\" \n                />\n                <ScoreBar score={this.state.score} />\n                <Wrapper>\n                    \n                    {this.state.images.map(image => (\n                        <ImageCard \n                            imageClick={this.imageClick}\n                            id={image.id}\n                            key={image.id}\n                            image={image.imageURL}\n                        />\n                    ))}\n                </Wrapper>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// takes the App's generated html and puts it on the DOM, within the root div\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}